Should filters on repeaters act on individual items rather then entire list?
Eg repeat="{{item in items : filter}}

filter: function(obj) {
  // should obb be an item or the items array?
}

Right now the filter is called once for the list (per assignment), not as 
individual items in the list change.

==>

Yes, this makes sense, there's no magic in the repeat expression, it's the 'items' array.
To filter on individual items, use a nested template and if expression.

-------------------------------------------------------------------------------
Binding scopes seems confusing ie named scopes keep the access to the parent
but otherwise not. 
Then again I wouldn't want to reinvent WPF's RelativeSource
Maybe require named scopes? That would keep it simple? Nope. This works well in
practice
-------------------------------------------------------------------------------
core-animation-pages seems to need 2 lists when animating items in a list. 
That would seem really expensive.
How does it deal with deleted items?
-------------------------------------------------------------------------------
Changed the content and the shadow dissapeared. Bumping the z-order on the toolbar 
and it come back. Maybe a note in the paper-shadow docs to warn about z-order issues
esp. with something like grid where you'll usually start with the toolbar at the top
and then add content lower down but the default clipping then puts the shadow behind 
the content
-------------------------------------------------------------------------------
Dev Editor - preserve expand/collapse stuff as it's really useful to be able
to hide <style> stuff
-------------------------------------------------------------------------------
background-color on animated-pages page breaks the animation (since the 2nd panel
can't show through). Doc warning? Or can we do in-page layout transitions?
Why doesn't cross-fade on the container element work? [It's explicitly noted in 
the docs]
-------------------------------------------------------------------------------
One-time bindings don't work in some cases eg myAttr='#{{fooIndex}}' worked 
but myAttr='#[[fooIndex]]' didn't. myAttr='[[fooIndex]]' also worked
-------------------------------------------------------------------------------
if I'm using valueattr on selector and valueattr is a number and if there's no item
with that number then selector assumes the number is an index and selects it.
Should it not do that if valueatt is in use?
[Borderline issue, I can see the logic]

